SET(ZMQ_INCLUDE_SEARCH_DIRS
    /opt/zmq/current/include
)

SET(ZMQ_LIBRARY_SEARCH_DIRS
    /opt/zmq/current/lib
)

message("-- checking for ZMQ")

IF (NOT ZMQ_INCLUDE_DIRS)

    SET(_ZMQ_FOUND_INC_DIRS "")

    FOREACH(_SEARCH_DIR ${ZMQ_INCLUDE_SEARCH_DIRS})
        FIND_PATH(_CUR_SEARCH
                NAMES zmq.hpp
                PATHS ${_SEARCH_DIR}
                NO_DEFAULT_PATH)
        IF (_CUR_SEARCH)
            LIST(APPEND _ZMQ_FOUND_INC_DIRS ${_CUR_SEARCH})
        ENDIF(_CUR_SEARCH)
        SET(_CUR_SEARCH _CUR_SEARCH-NOTFOUND CACHE INTERNAL "internal use")
    ENDFOREACH(_SEARCH_DIR ${ZMQ_INCLUDE_SEARCH_DIRS})

    IF (NOT _ZMQ_FOUND_INC_DIRS)
        MESSAGE(FATAL_ERROR "find_zmq.cmake: unable to find zmq headers")
    ENDIF (NOT _ZMQ_FOUND_INC_DIRS)
    
    FOREACH(_INC_DIR ${_ZMQ_FOUND_INC_DIRS})
        LIST(APPEND ZMQ_INCLUDE_DIRS ${_INC_DIR})
    ENDFOREACH(_INC_DIR ${_BOOST_FOUND_INC_DIRS})

ENDIF(NOT ZMQ_INCLUDE_DIRS)

IF (        ZMQ_INCLUDE_DIRS
    AND NOT ZMQ_LIBRARIES)

    SET(_ZMQ_FOUND_LIB_DIR "")
    SET(_ZMQ_POSTFIX "")

    FOREACH(_SEARCH_DIR ${ZMQ_LIBRARY_SEARCH_DIRS})
        FIND_PATH(_CUR_SEARCH
                NAMES libzmq.so
                PATHS ${_SEARCH_DIR}
                NO_DEFAULT_PATH)
        IF (_CUR_SEARCH)
            LIST(APPEND _ZMQ_FOUND_LIB_DIR ${_SEARCH_DIR})
        ENDIF(_CUR_SEARCH)
        SET(_CUR_SEARCH _CUR_SEARCH-NOTFOUND CACHE INTERNAL "internal use")
    ENDFOREACH(_SEARCH_DIR ${ZMQ_LIBRARY_SEARCH_DIRS})

    IF (NOT _ZMQ_FOUND_LIB_DIR)
        MESSAGE(FATAL_ERROR "find_zmq.cmake: unable to find zmq library")
    ELSE (NOT _ZMQ_FOUND_LIB_DIR)
        message("--  found matching version")
    ENDIF (NOT _ZMQ_FOUND_LIB_DIR)
    
    FOREACH(_LIB_DIR ${_ZMQ_FOUND_LIB_DIR})
        LIST(APPEND ZMQ_LIBRARIES ${_LIB_DIR}/libzmq.so)
    ENDFOREACH(_LIB_DIR ${_ZMQ_FOUND_INC_DIRS})
    

ENDIF(        ZMQ_INCLUDE_DIRS
      AND NOT ZMQ_LIBRARIES)



